diff -ur a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
--- a/omx/gstomxvideodec.c	2022-10-27 09:42:23.000000000 +0900
+++ b/omx/gstomxvideodec.c	2022-10-27 09:43:21.000000000 +0900
@@ -2985,6 +2985,11 @@
 
       out_port_def.nBufferSize = (out_port_def.format.video.nStride * out_port_def.format.video.nSliceHeight * 3) / 2;
 
+      if (out_port_def.nBufferSize <= OUT_BUFFER_LIMIT)
+        out_port_def.nBufferCountActual = 32;
+      else 
+        out_port_def.nBufferCountActual = 9;
+
       if (gst_omx_port_update_port_definition (self->dec_out_port,
              &out_port_def) != OMX_ErrorNone)
         return FALSE;
@@ -3397,6 +3402,7 @@
 
         if (GST_IS_OMX_H264_DEC (self)) {
           #define NAL_UNIT_MASK    (0x1F)
+          #define NAL_UNIT_SEI     (6)
           #define NAL_UNIT_SPS     (7)
           #define NAL_UNIT_PPS     (8)
           #define NAL_UNIT_AUD     (9)
@@ -3432,7 +3438,7 @@
             next_nal = &map.data[offset + startcode_len];
             next_nal_unit_type = *next_nal & NAL_UNIT_MASK;
 
-            if ((next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS)) {
+            if ((next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS) || (next_nal_unit_type == NAL_UNIT_SEI)) {
               found_decode_info = 1;
               buf->omx_buf->nFlags |= OMX_BUFFERFLAG_CODECCONFIG;
             } else if ((next_nal_unit_type == NAL_UNIT_EOSEQ) || (next_nal_unit_type == NAL_UNIT_EOS)) {
@@ -3447,12 +3453,13 @@
                 next_nal = startcode + startcode_len;
                 next_nal_unit_type = *next_nal & NAL_UNIT_MASK;
 
-                /* If the frame data starts with SPS/PPS, split at the next NAL that is not SPS/PPS/EOSEQ/EOS.
-                 * If the frame data doesn't start with SPS/PPS, split at the next SPS/PPS NAL.
+                /* If the frame data starts with SPS/PPS/SEI, split at the next NAL that is not SPS/PPS/EOSEQ/EOS/SEI.
+                 * If the frame data doesn't start with SPS/PPS/SEI, split at the next SPS/PPS/SEI NAL.
                  * If find the frame data with EOSEQ/EOS, split at the next NAL.
                  */
-                if ((found_decode_info && (next_nal_unit_type != NAL_UNIT_SPS) && (next_nal_unit_type != NAL_UNIT_PPS) && (next_nal_unit_type != NAL_UNIT_EOSEQ) && (next_nal_unit_type != NAL_UNIT_EOS))
-                  || (!found_decode_info && ((next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS)))
+                if ((found_decode_info && (next_nal_unit_type != NAL_UNIT_SPS) && (next_nal_unit_type != NAL_UNIT_PPS) && 
+                      (next_nal_unit_type != NAL_UNIT_EOSEQ) && (next_nal_unit_type != NAL_UNIT_EOS) && (next_nal_unit_type != NAL_UNIT_SEI))
+                  || (!found_decode_info && ((next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS) || (next_nal_unit_type == NAL_UNIT_SEI)))
                   || (found_eos_header)) {
                   frame_split_offset = startcode - &map.data[offset];
                   break;
@@ -3470,6 +3477,7 @@
           #define NAL_UNIT_AUD   (35)
           #define NAL_UNIT_EOS   (36)
           #define NAL_UNIT_EOB   (37)
+          #define NAL_UNIT_PREFIX_SEI (39)
 
           /* remove AUD */
           startcode = gst_omx_video_dec_get_startcode_length(&map.data[offset], data_end, &startcode_len);
@@ -3500,7 +3508,7 @@
             next_nal = &map.data[offset + startcode_len];
             next_nal_unit_type = (*next_nal & NAL_UNIT_MASK) >> 1;
 
-            if ((next_nal_unit_type == NAL_UNIT_VPS) || (next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS)) {
+            if ((next_nal_unit_type == NAL_UNIT_VPS) || (next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS) || (next_nal_unit_type == NAL_UNIT_PREFIX_SEI)) {
               found_decode_info = 1;
               buf->omx_buf->nFlags |= OMX_BUFFERFLAG_CODECCONFIG;
             } else if ((next_nal_unit_type == NAL_UNIT_EOS) || (next_nal_unit_type == NAL_UNIT_EOB)) {
@@ -3515,12 +3523,14 @@
                 next_nal = startcode + startcode_len;
                 next_nal_unit_type = (*next_nal & NAL_UNIT_MASK) >> 1;
 
-                /* If the frame data starts with VPS/SPS/PPS, split at the next NAL that is not VPS/SPS/PPS/EOS/EOB.
-                 * If the frame data doesn't start with VPS/SPS/PPS, split at the next VPS/SPS/PPS NAL.
+                /* If the frame data starts with VPS/SPS/PPS/PREFIX_SEI, split at the next NAL that is not VPS/SPS/PPS/EOS/EOB/PREFIX_SEI.
+                 * If the frame data doesn't start with VPS/SPS/PPS/EOS/EOB/PREFIX_SEI, split at the next VPS/SPS/PPS/EOS/EOB/PREFIX_SEI NAL.
                  * If find the frame data with EOSEQ/EOS, split at the next NAL.
                  */
-                if ((found_decode_info && (next_nal_unit_type != NAL_UNIT_VPS) && (next_nal_unit_type != NAL_UNIT_SPS) && (next_nal_unit_type != NAL_UNIT_PPS) && (next_nal_unit_type != NAL_UNIT_EOS) && (next_nal_unit_type != NAL_UNIT_EOB))
-                  || (!found_decode_info && ((next_nal_unit_type == NAL_UNIT_VPS) || (next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS)))
+                if ((found_decode_info && (next_nal_unit_type != NAL_UNIT_VPS) && (next_nal_unit_type != NAL_UNIT_SPS) && (next_nal_unit_type != NAL_UNIT_PPS) &&
+                      (next_nal_unit_type != NAL_UNIT_EOS) && (next_nal_unit_type != NAL_UNIT_EOB) && (next_nal_unit_type != NAL_UNIT_PREFIX_SEI))
+                  || (!found_decode_info && ((next_nal_unit_type == NAL_UNIT_VPS) || (next_nal_unit_type == NAL_UNIT_SPS) || (next_nal_unit_type == NAL_UNIT_PPS) ||
+                      (next_nal_unit_type == NAL_UNIT_EOS) || (next_nal_unit_type == NAL_UNIT_EOB) || (next_nal_unit_type == NAL_UNIT_PREFIX_SEI)))
                   || (found_eos_header)) {
                   frame_split_offset = startcode - &map.data[offset];
                   break;
diff -ur a/omx/gstomxvideodec.h b/omx/gstomxvideodec.h
--- a/omx/gstomxvideodec.h	2022-10-27 09:42:23.000000000 +0900
+++ b/omx/gstomxvideodec.h	2022-10-27 09:43:21.000000000 +0900
@@ -32,6 +32,10 @@
 
 #include "gstomx.h"
 
+#ifdef OMX_TARGET_RCAR_RZV2M
+#define OUT_BUFFER_LIMIT (OMX_U32)3342336
+#endif
+
 G_BEGIN_DECLS
 
 #define GST_TYPE_OMX_VIDEO_DEC \
