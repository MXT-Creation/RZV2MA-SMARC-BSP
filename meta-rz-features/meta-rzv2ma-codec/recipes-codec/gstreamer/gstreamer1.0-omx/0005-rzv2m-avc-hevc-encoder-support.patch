diff --git a/omx/gstomxvideoenc.c b/omx/gstomxvideoenc.c
index fe8c1bc..ac8b79d 100644
--- a/omx/gstomxvideoenc.c
+++ b/omx/gstomxvideoenc.c
@@ -2004,7 +2004,11 @@ gst_omx_video_enc_update_input_port (GstOMXVideoEnc * self,
           port_def.format.video.nStride = GST_ROUND_UP_64 (stride);
           break;
         case OMX_COLOR_FormatYUV420SemiPlanar:
+#ifdef OMX_TARGET_RCAR_RZV2M
+          gst_omx_video_calc_power(2, stride, &(port_def.format.video.nStride));
+#else
           port_def.format.video.nStride = GST_ROUND_UP_32 (stride);
+#endif
           break;
         default:
           break;
@@ -2803,7 +2807,11 @@ gst_omx_video_enc_semi_planar_manual_copy (GstOMXVideoEnc * self,
     GST_ERROR_OBJECT (self, "Invalid input buffer size");
     return FALSE;
   }
+#ifdef OMX_TARGET_RCAR_RZV2M
+  dest_stride = GST_ROUND_UP_128(port_def->format.video.nFrameWidth);
+#else
   dest_stride = port_def->format.video.nStride;
+#endif
 
   for (i = 0; i < 2; i++) {
     src_stride = GST_VIDEO_FRAME_COMP_STRIDE (&frame, i);
@@ -2813,8 +2821,12 @@ gst_omx_video_enc_semi_planar_manual_copy (GstOMXVideoEnc * self,
 
     dest = outbuf->omx_buf->pBuffer + outbuf->omx_buf->nOffset;
     if (i == 1)
+#ifdef OMX_TARGET_RCAR_RZV2M
+      dest += height * dest_stride;
+#else
       dest +=
           port_def->format.video.nSliceHeight * port_def->format.video.nStride;
+#endif
 
     src = GST_VIDEO_FRAME_COMP_DATA (&frame, i);
     height = GST_VIDEO_FRAME_COMP_HEIGHT (&frame, i);
-- 
2.7.4

