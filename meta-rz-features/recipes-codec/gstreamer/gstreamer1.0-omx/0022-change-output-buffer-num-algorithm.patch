--- a/omx/gstomxvideodec.c	2022-12-27 16:23:46.000000000 +0900
+++ b/omx/gstomxvideodec.c	2023-01-10 11:39:44.104675420 +0900
@@ -60,6 +60,10 @@
 #ifdef OMX_TARGET_RCAR_RZV2M
 #include "gstomxh264dec.h"
 #include "gstomxh265dec.h"
+
+#define MAXDPBMBS_H264_LV42 34816
+#define MAXLUMAPS_H265_LV5  8912896
+#define MAXDPBPICBUF_H265   6
 #endif
 
 GST_DEBUG_CATEGORY_STATIC (gst_omx_video_dec_debug_category);
@@ -3076,12 +3080,27 @@ gst_omx_video_dec_set_format (GstVideoDe
       out_port_def.format.video.nStride = info->width;
       gst_omx_video_calc_power(2, info->width, &(out_port_def.format.video.nStride));        // align power of 2
       out_port_def.format.video.nSliceHeight = GST_ROUND_UP_32 (info->height / 2) * 2; // align 32
-
       out_port_def.nBufferSize = (out_port_def.format.video.nStride * out_port_def.format.video.nSliceHeight * 3) / 2;
-      if (out_port_def.nBufferSize <= OUT_BUFFER_LIMIT)
-          out_port_def.nBufferCountActual = 17;
-      else
-        out_port_def.nBufferCountActual = 9;
+
+      if (GST_IS_OMX_H264_DEC (self)) {
+        guint pic_width_in_mbs = GST_ROUND_UP_16(out_port_def.format.video.nFrameWidth) / 16;
+        guint pic_height_in_map_units = GST_ROUND_UP_16(out_port_def.format.video.nFrameHeight) / 16; 
+        out_port_def.nBufferCountActual = 
+          MAX(MIN(MAXDPBMBS_H264_LV42 / (pic_width_in_mbs * pic_height_in_map_units), 16), 1) * 2;
+      } else {
+        guint PicSizeInSamplesY =
+          GST_ROUND_UP_32(out_port_def.format.video.nFrameWidth) * GST_ROUND_UP_32(out_port_def.format.video.nFrameHeight);
+        if (PicSizeInSamplesY <= (MAXLUMAPS_H265_LV5 >> 2))
+          out_port_def.nBufferCountActual = MIN(MAXDPBPICBUF_H265 * 4, 16);
+        else if (PicSizeInSamplesY <= (MAXLUMAPS_H265_LV5 >> 1))
+          out_port_def.nBufferCountActual = MIN(MAXDPBPICBUF_H265 * 2, 16);
+        else if (PicSizeInSamplesY <= ((3 * MAXLUMAPS_H265_LV5) >> 2))
+          out_port_def.nBufferCountActual = MIN((MAXDPBPICBUF_H265 * 4) / 3, 16);
+        else
+          out_port_def.nBufferCountActual = MAXDPBPICBUF_H265;
+        /* FillThisBuffer must be called one additional. */
+        out_port_def.nBufferCountActual++;
+      }
 
       if (gst_omx_port_update_port_definition (self->dec_out_port,
              &out_port_def) != OMX_ErrorNone)
